{"version":3,"sources":["components/Home.js","components/AddBoardGames.js","components/DeleteBoardGame.js","components/UpdateBoardGame.js","components/BoardGames.js","App.js","serviceWorker.js","index.js"],"names":["Home","to","class","AddBoardGames","props","state","name","num_players_max","num_players_min","desc","addBoardGame","bind","handleName","handleMax","handleMin","handleDesc","event","preventDefault","fetch","process","method","headers","body","JSON","stringify","this","then","getBoardGames","setState","target","value","onSubmit","type","placeholder","onChange","required","min","React","Component","DeleteBoardGame","_id","canDelete","deleteBoardGame","result","window","confirm","console","log","onClick","UpdateBoardGame","keyToUpdate","typeInput","handleSelection","handleID","handleValue","handleSubmit","updateData","UpdateValue","htmlFor","id","BoardGames","boardGames","response","json","catch","BoardGameComponents","map","boardGame","App","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.062c05d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () =>{\r\n    return (\r\n        <>\r\n            <h1>Home</h1>\r\n            <Link to='/BoardGames' class=\"link\">Board Games</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass AddBoardGames extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            num_players_max: '',\r\n            num_players_min: 1,\r\n            desc: ''\r\n        }\r\n\r\n        this.addBoardGame = this.addBoardGame.bind(this);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleMax = this.handleMax.bind(this);\r\n        this.handleMin = this.handleMin.bind(this);\r\n        this.handleDesc = this.handleDesc.bind(this);\r\n    }\r\n    addBoardGame(event) {\r\n        event.preventDefault();\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/board_games`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify([this.state])\r\n        }).then(this.props.getBoardGames)\r\n    }\r\n    handleName(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    handleMax(event) {\r\n        this.setState({num_players_max: event.target.value});\r\n    }\r\n    handleMin(event) {\r\n        this.setState({num_players_min: event.target.value});\r\n    }\r\n    handleDesc(event) {\r\n        this.setState({desc: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.addBoardGame}>\r\n                <input type=\"text\" placeholder=\"Name of Board Game\" onChange={this.handleName} required/>\r\n                <input type=\"number\" placeholder=\"Minimun Players\" min=\"1\" onChange={this.handleMin} required/>\r\n                <input type=\"number\" placeholder=\"Max Players\" min={this.state.num_players_min} onChange={this.handleMax} required/>\r\n                <input type=\"text\" placeholder=\"Game Description\" onChange={this.handleDesc} required/>\r\n                <input type=\"submit\" value=\"Add Board Game\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddBoardGames;","import React from 'react';\r\n\r\nclass DeleteBoardGame extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            _id: this.props._id,\r\n            canDelete: false\r\n        }\r\n        this.deleteBoardGame = this.deleteBoardGame.bind(this);\r\n    }\r\n    deleteBoardGame(event){\r\n        event.preventDefault();\r\n        let result = window.confirm(\"Are you sure you want to delete this game\");\r\n        console.log(result);\r\n        this.setState({canDelete: result}, () => {\r\n            if (this.state.canDelete){\r\n                fetch(`${process.env.REACT_APP_API_URL}/api/board_games/${this.state._id}`, {\r\n                    method: \"DELETE\"\r\n                }).then(this.props.getBoardGames)\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <button onClick={this.deleteBoardGame}>Delete</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteBoardGame;","import React from 'react'\r\n\r\nclass UpdateBoardGame extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            keyToUpdate: \"name\",\r\n            typeInput: \"text\",\r\n            _id: \"\",\r\n            value: \"\"\r\n        }\r\n\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n        this.handleID = this.handleID.bind(this);\r\n        this.handleValue = this.handleValue.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSelection(event){\r\n        this.setState({keyToUpdate: event.target.value}, () =>{\r\n            if(this.state.keyToUpdate === \"name\" || this.state.keyToUpdate === \"desc\"){\r\n                this.setState({typeInput: \"text\"})\r\n            }else{\r\n                this.setState({typeInput: \"number\"})\r\n            }\r\n        });\r\n    }\r\n    handleID(event){\r\n        this.setState({_id: event.target.value})\r\n    }\r\n    handleValue(event){\r\n        this.setState({value: event.target.value})\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let updateData ={\r\n            [this.state.keyToUpdate] : this.state.value\r\n        }\r\n        console.log(this.state._id);\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/board_games/${this.state._id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updateData)\r\n        }).then(this.props.getBoardGames);\r\n    }\r\n    render(){\r\n        const UpdateValue = <input type={this.state.typeInput} placeholder=\"Update value to\" onChange={this.handleValue} min=\"1\"/>\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Game ID to Update\" onChange={this.handleID} required/>\r\n                <label htmlFor=\"key\">Select value to update: </label>\r\n                <select id=\"key\" onChange={this.handleSelection}>\r\n                    <option value=\"name\">Game Name</option>\r\n                    <option value=\"num_players_min\">Minimun Players</option>\r\n                    <option value=\"num_players_max\">Max Players</option>\r\n                    <option value=\"desc\">Game Description</option>\r\n                </select>\r\n                {UpdateValue}\r\n                <input type=\"submit\" value=\"Update\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateBoardGame;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AddBoardGames from './AddBoardGames';\r\nimport DeleteBoardGame from './DeleteBoardGame';\r\nimport UpdateBoardGame from './UpdateBoardGame'\r\n\r\nclass BoardGames extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            boardGames: []\r\n        }\r\n        this.getBoardGames = this.getBoardGames.bind(this);\r\n    }\r\n    getBoardGames() {\r\n        console.log('Called getBoardGames');\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/board_games`)\r\n            .then(response => response.json())\r\n            .then(boardGames => this.setState({boardGames}, () => console.log(this.state.boardGames)))\r\n            .catch(console.log)\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.getBoardGames();\r\n     }\r\n\r\n    render(){\r\n        const BoardGameComponents = this.state.boardGames.map(boardGame =>{\r\n            return <li>\r\n            <h3>{boardGame.name}</h3> <DeleteBoardGame _id={boardGame._id} getBoardGames={this.getBoardGames}/>\r\n                <ul>\r\n                    <li class=\"GameItem\">Description: {boardGame.desc}</li>\r\n                    <li class=\"GameItem\">Id: {boardGame._id}</li>\r\n                    <li class=\"GameItem\">Players: {boardGame.num_players_min}-{boardGame.num_players_max}</li>\r\n                </ul>\r\n            </li>})\r\n        return (\r\n            <>\r\n                <h1>Board Games</h1>\r\n                <Link to='/' class=\"link\">Back to Home</Link>\r\n                <h2>Add Board Game</h2>\r\n                <AddBoardGames getBoardGames={this.getBoardGames}/>\r\n                <h2>Update Board Game</h2>\r\n                <UpdateBoardGame getBoardGames={this.getBoardGames}/>\r\n                <h2>List of Board Games</h2>\r\n                <button onClick={this.getBoardGames}>Refresh Board Games</button>\r\n                <ul>\r\n                    {BoardGameComponents}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoardGames;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport BoardGames from './components/BoardGames';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/BoardGames\">\n            <BoardGames />\n          </Route>\n          <Route path=\"/\" exact>\n            <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}